<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="Blog.PinnedPostsSheet" locale="">
  <web>Blog</web>
  <name>PinnedPostsSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1537276990000</creationDate>
  <parent>xwiki:Blog.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1749827423000</date>
  <contentUpdateDate>1749827423000</contentUpdateDate>
  <version>1.1</version>
  <title>Pinned posts Sheet</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#set ($discard = $xwiki.jsx.use("Blog.PinnedPostsSheet"))
##

{{html wiki="true"}}
&lt;div class="row"&gt;
  &lt;div class="col-md-12"&gt;
    &lt;h3&gt;
      $services.localization.render('blog.post.layout.cards.pinnedposts.edit')
    &lt;/h3&gt;
    &lt;div id="pinnedPostsContainer"&gt;
      &lt;form id="pinnedPostsForm" action="$doc.getURL('save')" method="post"&gt;
        #if ("$!doc.getObject('Blog.PinnedPostsClass')" != '')
          #set ($vdoc = $doc)
        #else
          #set ($vdoc = $xwiki.getDocument("Blog.PinnedPostsTemplate"))
        #end
        $vdoc.display("posts", "edit")
        &lt;input type="hidden" id="Blog.PinnedPostsClass_0_orderedPosts" name="Blog.PinnedPostsClass_0_orderedPosts" value="$!escapetool.xml($vdoc.getObject('Blog.PinnedPostsClass').getProperty('orderedPosts').value)"/&gt;
        &lt;input type="hidden" name="form_token" value="$services.csrf.token"/&gt;
        &lt;div&gt;
          &lt;input class="btn btn-primary" type="submit" name="action_save" value="$escapetool.xml($services.localization.render('blog.post.layout.cards.pinnedposts.save'))" id="savePinnedPostsBtn"/&gt;
        &lt;/div&gt;
      &lt;/form&gt;

      &lt;div id="errors-container"&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
{{/html}}
{{/velocity}}</content>
  <object>
    <name>Blog.PinnedPostsSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>3a6b30fd-c383-4936-8d55-402d227c0dba</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require.config({
  paths: {
    'select2': "$services.webjars.url('select2', 'js/select2.min.js')"
  },
  shim: {
    'select2': {
        deps: ['jquery'],
        exports: 'Select2'
    }
  }
});

require(['jquery',"$services.webjars.url('jquery-ui', 'jquery-ui.js')",'select2'], function($){
  function loadCss(url) {
    var link = document.createElement('link');
    link.type = 'text/css';
    link.rel = 'stylesheet';
    link.href = url;
    document.getElementsByTagName('head')[0].appendChild(link);
  }
  function orderSelectOptions(selectObj, orderedPinnedPosts){
    if (orderedPinnedPosts &amp;&amp; orderedPinnedPosts.length &gt; 0) {
      var prevOption = null;
      for(var i=0;i&lt;orderedPinnedPosts.length;i++){
        var option = $("option", selectObj).filter(function(index){
          return $(this).val() == orderedPinnedPosts[i];
        });
        if (option.length &gt; 0) {
          if(!prevOption){
            option.prependTo(selectObj);
          }
          else
          {
            option.insertAfter(prevOption);
          }
          prevOption = option
        }
      }
      selectObj.trigger('change.select2');
    }
  }
  function initializePinnedPostsSelector(){
    var pinnedPostsContainerSelector = "#pinnedPostsContainer";
    var pinnedPostsSelect = $(pinnedPostsContainerSelector + " select");
    var orderedPinnedPostsInputSelector = 'input[type="hidden"][name="Blog.PinnedPostsClass_0_orderedPosts"';
    var orderedPinnedPosts = $(orderedPinnedPostsInputSelector).length &gt; 0 &amp;&amp; $(orderedPinnedPostsInputSelector).val() !='' ? JSON.parse($(orderedPinnedPostsInputSelector).val()) : [];
    var pinnedPostsUlSelector = "#pinnedPostsContainer ul.select2-selection__rendered";
    pinnedPostsSelect.select2({templateSelection: function(data){
      return $("&lt;span&gt;&lt;/span&gt;").text(data.text).append($('&lt;input type="hidden"/&gt;').val(data.id));
    }});
    // Order the already selected pinned posts
    orderSelectOptions(pinnedPostsSelect, orderedPinnedPosts);
    // Allow ordering (drag &amp; drop) of the select items
    $(pinnedPostsUlSelector).sortable({
      containment: 'parent',
      update: function(event, ui) {
        var orderedSelectedElements = [];
        $("li.select2-selection__choice input", pinnedPostsContainerSelector).each(function(){
          orderedSelectedElements.push($(this).val());
        });
        orderSelectOptions(pinnedPostsSelect, orderedSelectedElements);
      }
    });
    // When a new item is selected, insert it in the end of the select
    pinnedPostsSelect.on('select2:select', function(e){
      var elm = $(e.params.data.element);
      var t = $(this);//The select
      t.append(elm);
      t.trigger('change.select2');
    });
    // When a change is done on  the posts selection (add/delete/move)
    // the ordered pinned posts are updated
    pinnedPostsSelect.on("change.select2", function (event) {
      var orderedSelectedElements = [];
      $("option:selected", $(event.currentTarget)).each(function(){
        orderedSelectedElements.push($(this).val());
      });
      // Save the selected items in hidden element
      $(orderedPinnedPostsInputSelector).val(JSON.stringify(orderedSelectedElements));
    });
  }
  //
  $(document).ready(function(){
    loadCss("$services.webjars.url('select2', 'css/select2.min.css')");
    // Apply 'Select2' js plugin on the pinned posts select
    initializePinnedPostsSelector();
    // Initialize the edit pinned posts button
    $(".editPinnedPosts").on('click', function(){
      var editPinnedPostsURL = $('#editPinnedPostsURL').val();
      $('.xdialog-modal-container').remove();
      new XWiki.widgets.pinnedPostsModalPopup({pageURL: editPinnedPostsURL});
    });
  });

  $( "body" ).on( "click", ".xdialog-modal-container #savePinnedPostsBtn", function(event) {
    event.preventDefault();
    var form = $("#pinnedPostsForm");
    var savePinnedPostsURL = form.attr("action");
    var pinnedPostsData = form.serialize();
    var ajaxURL = savePinnedPostsURL;
    var ajaxData = pinnedPostsData;
    var createPinnedPostsObject = false;

    if($("input[name='createPinnedPostsObject']").length){
      createPinnedPostsObject = true;
      var newPinnedPostsObjectURL = $('#newPinnedPostsObjectURL').val();
      ajaxURL = newPinnedPostsObjectURL;
      ajaxData = {};
    }

    // submit the form
    $.ajax({
      method: "POST",
      url: ajaxURL,
      data: ajaxData
    })
    .done(function( msg ) {
      if (!createPinnedPostsObject) {
        location.reload();
      }
      else
      {
        $.ajax({
          method: "POST",
          url: savePinnedPostsURL,
          data: pinnedPostsData
        })
        .done(function( msg ) {
          location.reload();
        }).fail(function( jqXHR, textStatus ) {
          $('#errors-container').html('').append($('&lt;div /&gt;', {'class': 'box errormessage', 'text': jqXHR.responseText}));
        });
      }
    }).fail(function( jqXHR, textStatus ) {
      $('#errors-container').html('').append($('&lt;div /&gt;', {'class': 'box errormessage', 'text': jqXHR.responseText}));
    });
  });</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Blog.PinnedPostsSheet</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>bb289e87-2b47-40c7-a8b9-7e3649ecf40c</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>// Make sure the XWiki 'namespace' and the ModalPopup class exist.
if(typeof(XWiki) == "undefined" || typeof(XWiki.widgets) == "undefined" || typeof(XWiki.widgets.ModalPopup) == "undefined") {
 if (typeof console != "undefined" &amp;&amp; typeof console.warn == "function") {
    console.warn("[MessageBox widget] Required class missing: XWiki.widgets.ModalPopup");
  }
} else {

XWiki.widgets.pinnedPostsModalPopup = Class.create(XWiki.widgets.ModalPopup, {
 /** Default parameters can be added to the custom class. */
  defaultInteractionParameters : {
  },
 /** Constructor. Registers the key listener that pops up the dialog. */
  initialize : function($super, interactionParameters) {
   this.interactionParameters = Object.extend(Object.clone(this.defaultInteractionParameters), interactionParameters || {});
    // call constructor from ModalPopup with params content, shortcuts, options
    $super(
     this.createContent(this.interactionParameters),
      {
       "show"  : { method : this.showDialog,  keys : [] },
       "close" : { method : this.closeDialog, keys : ['Esc'] }
      },
      {
         displayCloseButton : true, 
         verticalPosition : "top",
         backgroundColor : "#FFF"
      }
    );
   this.showDialog();
   this.setClass("pinnedposts-modal");
  },
 /** Get the content of the modal dialog using ajax */
  createContent : function (data) {
    var content =  new Element('div', {'class': 'modal-popup'});
    // get page content for the pageURL
    new Ajax.Request(data.pageURL,
    {
      method:'get',
      onSuccess: function(transport){
        var response = transport.responseText || "no response text";
        content.insert(response);
        require(['jquery'], function($){
          // Delete the first empty item of the select box
          // That is generated automatically by xwiki Database list displayer
          if ($("#pinnedPostsForm select option").val() == '') {
            $("#pinnedPostsForm select option").eq(0).remove();
          }
          // Initialize the tools select
          initializePinnedPostsSelector();
        });
      },
      onFailure: function(){ content.insert('Something went wrong...');
    }
    });

    return content;
  }
});
} // if the parent widget is defined
});</code>
    </property>
    <property>
      <name>ModalPopup code</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Blog.PinnedPostsSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>ef7575ca-adbc-4cd7-b630-124e9642d60a</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#pinnedPostsContainer .select2-container {
  width: 100% !important;
}
#savePinnedPostsBtn {
  margin-top: 20px;
}
/* Modal popup */
.xdialog-box-pinnedposts-modal h3{
  margin-top: 0px;
  margin-bottom: 30px;
}
.xdialog-box-pinnedposts-modal {
  overflow: hidden;
}
@media (min-width: 768px) {
  .xdialog-box-pinnedposts-modal {
    width: 700px;
  }
}
@media (min-width: 1200px) {
  .xdialog-box-pinnedposts-modal {
    width: 800px;
  }
}
@media (max-width: 768px) {
  .xdialog-box-pinnedposts-modal {
    width: 400px;
  }
}</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
