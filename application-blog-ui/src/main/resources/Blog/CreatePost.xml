<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="Blog.CreatePost" locale="">
  <web>Blog</web>
  <name>CreatePost</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1227218107000</creationDate>
  <parent>Blog.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1749827423000</date>
  <contentUpdateDate>1749827423000</contentUpdateDate>
  <version>1.1</version>
  <title>Create a new blog post</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="Blog.BlogCode"/}}

{{velocity}}
## In case this page is called from  the blogPostCreate macro
#if ("$!targetBlogDoc" != '')
  #set ($doc = $targetBlogDoc)
#end
{{html clean="false" wiki="true"}}
#set($name = "$!request.entryTitle.trim()")
#set($title = $name)
#if($name == '')
  ## If there's also a form_token passed it means the user has entered an empty blog post title, let the user know about it!
  #if ("$!request.form_token" != '')
    {{error}}$services.localization.render('blog.post.titleEmptyError'){{/error}}

  #end
  ## First step, display the create form
  #if($hasEdit)
  $xwiki.jsx.use($blogScriptsDocumentName)##
  #set($space = "$!request.entrySpace")
  #if($space == '')
    #set($space = $doc.space)
  #end
  &lt;form action='$doc.getURL()' method="post" class="xformInline newBlogPostForm"&gt;
  &lt;div&gt;
    &lt;input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" /&gt;
    &lt;input type="hidden" name="entrySpace" value="$!{escapetool.xml($services.rendering.escape($space,$doc.syntax))}"/&gt;
    #if($doc.getObject($blogCategoryClassname))
      &lt;input type="hidden" name="category" value="$services.rendering.escape(${escapetool.xml(${doc.fullName})}, $doc.syntax)"/&gt;
    #end
    $services.icon.renderHTML('add')&lt;label class="createPost" for="entryTitle"&gt;$services.localization.render('blog.post.createpost') &lt;/label&gt;
    &lt;input type="text" id="entryTitle" name="entryTitle" size="30" placeholder="$services.localization.render('blog.post.title')"/&gt; &lt;span class="buttonwrapper"&gt;
    &lt;input type="submit" value="${escapetool.xml($services.localization.render('blog.post.create'))}" class="btn btn-primary button"/&gt;&lt;/span&gt;
  &lt;/div&gt;
  &lt;/form&gt;
  #elseif("$!request.entryTitle" != '')## !hasEdit &amp;&amp; form submitted
    #template('accessdenied.vm')
  #end## hasEdit
#else
  ## Second step, form submitted, create the document
  #set($space = "$!request.entrySpace")
  #getBlogPostsLocation($space $blogPostsLocation)
  #if($blogPostsLocation == '')
    #set($blogPostsLocation = 'Main')
  #end
  ## Since XWiki 12.0RC1 it is possible to use a naming strategy at wiki level and the blog application should respect it.
  #if("$!services.modelvalidation" != '' &amp;&amp; $services.modelvalidation.configuration.useTransformation())
    #set($name = $services.modelvalidation.transformName($name))
  #else
    ## Remove . and : from the document name, as they have a special meaning in XWiki document names
    #set($name = $name.replaceAll('[.:]', ''))
  #end
  #set($blogPostsLocationReference = $services.model.resolveSpace($blogPostsLocation))
  #set($postDocRef = $services.model.createDocumentReference($name, $blogPostsLocationReference))
  ## Make sure blog name is new
  #if($xwiki.exists($postDocRef))
    #set($name = $xwiki.getUniquePageName($blogPostsLocation, $name))
    #set($postDocRef = $services.model.createDocumentReference($name, $blogPostsLocationReference))
  #end
  ## Get the target blog document, to set it as the parent
  #getBlogDocument($space $blogDoc)
  #set($parent = "$!{escapetool.url($blogDoc.fullName)}")
  #set($title = "$!{escapetool.url($title)}")
  #set($category = "")
  #if("$!request.category" != '')
    #set($category = "&amp;${blogPostClassname}_${blogPostObjectNumber}_category=${escapetool.url(${request.category})}")
  #end
  $response.sendRedirect($xwiki.getURL($postDocRef, 'edit', "template=${blogPostTemplate}&amp;parent=${parent}&amp;title=${title}&amp;${blogPostClassname}_0_title=${title}$!{category}&amp;form_token=$!{request.getParameter('form_token')}"))
#end## name == ''
{{/html}}
{{/velocity}}</content>
</xwikidoc>
