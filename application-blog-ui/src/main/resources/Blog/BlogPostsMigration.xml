<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="Blog.BlogPostsMigration" locale="">
  <web>Blog</web>
  <name>BlogPostsMigration</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1490610430000</creationDate>
  <parent>Blog.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1749827423000</date>
  <contentUpdateDate>1749827423000</contentUpdateDate>
  <version>1.1</version>
  <title>Blog posts migration</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{info}}In order to not break the actual blog use cases and to be able to aggregate posts of blogs using the same categories location we need to set the category property of the old blog posts to a default value when the post category is not set by the user.{{/info}}

{{velocity}}
#if ($hasAdmin)
#set ($excludedPostsQuery = "select doc1.fullName from XWikiDocument doc1, BaseObject as obj1, DBStringListProperty as category left join category.list catList 
where doc1.fullName &lt;&gt; 'Blog.BlogPostTemplate' and
obj1.name=doc1.fullName and obj1.className='Blog.BlogPostClass' and obj1.id=category.id.id and category.id.name='category' and catList Like '%.%'")

#set ($query = ", BaseObject as obj where doc.fullName &lt;&gt; 'Blog.BlogPostTemplate' and
obj.name=doc.fullName and obj.className='Blog.BlogPostClass' and doc.fullName not in ($excludedPostsQuery)")
#set ($results = $services.query.hql($query).execute())

#if ("$!request.confirm" == 'true')
  #set ($logger = $services.logging.getLogger("org.xwiki.contrib.blog.${doc.fullName}"))
  #set ($discard = $logger.info('Migration started...'))
  #set ($migrated = false)
   == Migrated blog posts ==
  #foreach($post in $results)
    #set($postDoc = $xwiki.getDocument($post))
    #set($postObj = $postDoc.getObject('Blog.BlogPostClass'))
    #if ("$!postObj.category" == '')
      #set($discard = $postObj.set('category', 'Blog.Categories.WebHome'))
      #set($discard = $postDoc.save('Save post after initializing it category by the default category', true))
      #set ($discard = $logger.info('  Migration of the blog post [{}]', $post))
      #set ($migrated = true)
      * [[$post&gt;&gt;$post]] (/)
    #end
  #end
  #if (!$migrated)
  {{warning}}There is no blog posts to migrate{{/warning}}
  #end
  #set ($discard = $logger.info('Migration complete.'))
#else
  #if($results.size() &gt; 0)
    == Blog posts to migrate ($results.size()): ==
    #foreach($post in $results)
     * [[$post&gt;&gt;$post]]
    #end
  #else
    {{warning}}There is no blog posts to migrate{{/warning}}
  #end
#end

#if ("$!request.confirm" != 'true' &amp;&amp; $results.size() &gt; 0)
  {{html}}&lt;a href="$doc.getURL('view', 'confirm=true')" class='button'&gt;Start&lt;/a&gt;{{/html}}
#end
#else
{{error}}You are not allowed to execute the blog posts migration{{/error}}
#end
{{/velocity}}
</content>
</xwikidoc>
